{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Toggle.jsx\";\nimport React, { Component } from 'react';\n\nclass Toggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.isToggleOn ? 'ON' : 'OFFY');\n  }\n\n}\n\nexport default Toggle;","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Toggle.jsx"],"names":["React","Component","Toggle","constructor","props","state","isToggleOn","handleClick","bind","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEC,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAE5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFe,CAIf;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,KAAL,CAAnB;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,MADlC,CADF;AAKD;;AAtByB;;AA0BhC,eAAeJ,MAAf","sourcesContent":["import React, { Component } from 'react'\n\n class Toggle extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {isToggleOn: true};\n    \n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n      }\n\n      handleClick() {\n        this.setState(state => ({\n          isToggleOn: !state.isToggleOn\n        }));\n      }\n    \n      render() {\n        return (\n          <button onClick={this.handleClick}>\n            {this.state.isToggleOn ? 'ON' : 'OFFY'}\n          </button>\n        );\n      }\n    }\n\n\nexport default Toggle\n"]},"metadata":{},"sourceType":"module"}