{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/dark-mode/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/dark-mode/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import ChangeArea from './Components/ChangeArea';\n// import Toggle from './Components/Toggle';\n\nimport Example from './Components/Example';\nimport { useState } from 'react';\n\nfunction App() {\n  const heading = React.useRef();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        number = _useState2[0],\n        setState = _useState2[1];\n\n  const numbers = [1, 2, 3, 4, 5];\n\n  const lightMode = () => {\n    heading.current.className = 'darkMode';\n    const doubled = numbers.map(number => number * 2);\n    setState(doubled);\n  };\n\n  const darkMode = () => {\n    heading.current.className = 'App';\n    let numbers = [1, 2, 3, 4, 5];\n    const tripled = numbers.map(number => number * 3);\n    setState(tripled);\n  };\n\n  return React.createElement(\"div\", {\n    ref: heading,\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: lightMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"light mode\"), React.createElement(\"button\", {\n    onClick: darkMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"dark mode\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, numbers), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" hello there\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/dark-mode/src/App.js"],"names":["React","Example","useState","App","heading","useRef","number","setState","numbers","lightMode","current","className","doubled","map","darkMode","tripled"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,EAAhB;;AAFa,oBAIeH,QAAQ,EAJvB;AAAA;AAAA,QAILI,MAJK;AAAA,QAIGC,QAJH;;AAMZ,QAAMC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB;;AACC,QAAMC,SAAS,GAAG,MAAM;AACxBL,IAAAA,OAAO,CAACM,OAAR,CAAgBC,SAAhB,GAA4B,UAA5B;AAEA,UAAMC,OAAO,GAAGJ,OAAO,CAACK,GAAR,CAAaP,MAAD,IAAYA,MAAM,GAAG,CAAjC,CAAhB;AACAC,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACK,GALL;;AAOA,QAAME,QAAQ,GAAG,MAAM;AACnBV,IAAAA,OAAO,CAACM,OAAR,CAAgBC,SAAhB,GAA4B,KAA5B;AACA,QAAIH,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAd;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACK,GAAR,CAAaP,MAAD,IAAYA,MAAM,GAAG,CAAjC,CAAhB;AACAC,IAAAA,QAAQ,CAACQ,OAAD,CAAR;AACK,GALT;;AAYF,SAGF;AAAK,IAAA,GAAG,EAAEX,OAAV;AAAmB,IAAA,SAAS,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAEK,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAQ,IAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,OAAJ,CAJA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CANA,CAHE;AAgBD;;AAED,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n// import ChangeArea from './Components/ChangeArea';\n// import Toggle from './Components/Toggle';\nimport Example from './Components/Example';\nimport {useState} from 'react';\n\nfunction App() {\n\n  const heading = React.useRef();\n\n  const [ number, setState] = useState()\n  \n   const numbers = [1, 2, 3, 4, 5]\n    const lightMode = () => {\n    heading.current.className = 'darkMode' \n    \n    const doubled = numbers.map((number) => number * 2);\n    setState(doubled);\n        };\n\n    const darkMode = () => {\n        heading.current.className = 'App' \n        let numbers = [1, 2, 3, 4, 5]\n        const tripled = numbers.map((number) => number * 3);\n        setState(tripled);\n            };\n\n\n        \n\n\n\n  return (\n    \n\n<div ref={heading} className=\"App\">\n<button onClick={lightMode}>light mode</button>\n<button onClick={darkMode}>dark mode</button>\n\n<p>{numbers}</p>\n\n<header>\n<p> hello there</p>\n</header>\n \n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}