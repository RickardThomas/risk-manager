{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n  const selectRef = useRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const input = inputRef.current;\n  const selecting = selectRef.current;\n\n  const handleAdd = () => {\n    const order = {\n      input,\n      selecting\n    };\n    console.log(input.value);\n    console.log(selecting.value);\n\n    if (input.value !== '') {\n      setList([...list, input.value, selecting.value]);\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"select\", {\n    ref: selectRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Btc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"BTC\"), React.createElement(\"option\", {\n    value: \"Eth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"option\", {\n    value: \"Ltc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"LTC\")), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    pattern: \"[0-9]\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, list.reverse().map((item, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, item))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useRef","Example","inputRef","selectRef","list","setList","input","current","selecting","handleAdd","order","console","log","value","reverse","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,OAAhC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AACA,QAAMG,SAAS,GAAGH,MAAM,EAAxB;;AAH8B,oBAMND,QAAQ,CAAC,EAAD,CANF;AAAA;AAAA,QAMvBK,IANuB;AAAA,QAMjBC,OANiB;;AAO9B,QAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AACI,QAAMC,SAAS,GAAGL,SAAS,CAACI,OAA5B;;AAEJ,QAAME,SAAS,GAAG,MAAM;AAIpB,UAAMC,KAAK,GAAG;AAAEJ,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAd;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,KAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACK,KAAtB;;AAEA,QAAIP,KAAK,CAACO,KAAN,KAAgB,EAApB,EAAuB;AACnBR,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUE,KAAK,CAACO,KAAhB,EAAuBL,SAAS,CAACK,KAAjC,CAAD,CAAP;AACH;;AACCP,IAAAA,KAAK,CAACO,KAAN,GAAc,EAAd;AACD,GAbL;;AAeA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAKF;AAAQ,IAAA,GAAG,EAAEV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,EAEA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA,EAGA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHA,CALE,EAWA;AAAO,IAAA,GAAG,EAAED,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAqC,IAAA,OAAO,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,EAaA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEO,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOL,IAAI,CAACU,OAAL,GAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAb,CADD,CADP,CAfA,CADA;AA0BH","sourcesContent":["import React from 'react';\nimport { useState, useRef} from 'react';\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const selectRef = useRef();\n\n\n    const [list, setList] = useState([]);\n    const input = inputRef.current;\n        const selecting = selectRef.current;\n\n    const handleAdd = () => {\n\n        \n\n        const order = { input, selecting}\n        \n        console.log(input.value)\n        console.log(selecting.value)\n\n        if (input.value !== ''){\n            setList([...list, input.value, selecting.value]);\n        }  \n          input.value = ''\n        };\n\n    return (\n    <div>\n    <h1> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n\n  <select ref={selectRef}>\n  <option value=\"Btc\">BTC</option>\n  <option value=\"Eth\">ETH</option>\n  <option value=\"Ltc\">LTC</option>\n</select>\n\n    <input ref={inputRef}  maxLength=\"6\" pattern=\"[0-9]\"/>\n\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n    \n    <ul>\n          {list.reverse().map((item, i) => (\n            <li key={i}>{item}\n            </li>\n          ))}\n        </ul>\n\n    \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}