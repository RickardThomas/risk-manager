{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/i-code/4-position-sizing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/i-code/4-position-sizing/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(2),\n        _useState2 = _slicedToArray(_useState, 2),\n        riskReward = _useState2[0],\n        setRr = _useState2[1];\n\n  const _useState3 = useState(2),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confirmations = _useState4[0],\n        setconfirmations = _useState4[1];\n\n  const _useState5 = useState('1000'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        balance = _useState6[0],\n        setBalance = _useState6[1];\n\n  let risk = (100 / (riskReward * confirmations)).toFixed(0);\n  let positionSize = (balance / 100 * (riskReward * confirmations)).toFixed(0);\n  return React.createElement(\"div\", {\n    className: \"sizer-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Position Sizer\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Account Balance:\"), React.createElement(\"input\", {\n    className: \"balance\",\n    onInput: e => setBalance(e.target.value),\n    placeholder: '1000',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Risk to Reward 1: \", riskReward), React.createElement(\"input\", {\n    className: \"slider\",\n    onInput: e => setRr(e.target.value),\n    defaultValue: \"2\",\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Confirmations:  \", confirmations, \"  \"), React.createElement(\"input\", {\n    className: \"slider\",\n    onInput: e => setconfirmations(e.target.value),\n    defaultValue: \"2\",\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Your Position Size : \\xA3  \", positionSize, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \"Your Risk  % \", risk));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/i-code/4-position-sizing/src/App.js"],"names":["React","useState","App","riskReward","setRr","confirmations","setconfirmations","balance","setBalance","risk","toFixed","positionSize","e","target","value"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEeD,QAAQ,CAAC,CAAD,CAFvB;AAAA;AAAA,QAENE,UAFM;AAAA,QAEMC,KAFN;;AAAA,qBAG6BH,QAAQ,CAAC,CAAD,CAHrC;AAAA;AAAA,QAGNI,aAHM;AAAA,QAGSC,gBAHT;;AAAA,qBAIkBL,QAAQ,CAAC,MAAD,CAJ1B;AAAA;AAAA,QAINM,OAJM;AAAA,QAIIC,UAJJ;;AAMb,MAAIC,IAAI,GAAG,CAAE,OAAON,UAAU,GAAGE,aAApB,CAAF,EAAsCK,OAAtC,CAA8C,CAA9C,CAAX;AAEA,MAAIC,YAAY,GAAI,CAACJ,OAAO,GAAG,GAAV,IAAiBJ,UAAU,GAAGE,aAA9B,CAAD,EAA+CK,OAA/C,CAAuD,CAAvD,CAApB;AAEA,SAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJA,EAKA;AAAO,IAAA,SAAS,EAAC,SAAjB;AAA2B,IAAA,OAAO,EAAEE,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnD;AAAsE,IAAA,WAAW,EAAE,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyBX,UAAzB,CARA,EASA;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAES,CAAC,IAAIR,KAAK,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;AAA+D,IAAA,YAAY,EAAC,GAA5E;AAAgF,IAAA,IAAI,EAAC,OAArF;AAA6F,IAAA,GAAG,EAAC,GAAjG;AAAqG,IAAA,GAAG,EAAC,IAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwBT,aAAxB,OAZA,EAaA;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAEO,CAAC,IAAIN,gBAAgB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxD;AAA0E,IAAA,YAAY,EAAC,GAAvF;AAA2F,IAAA,IAAI,EAAC,OAAhG;AAAwG,IAAA,GAAG,EAAC,GAA5G;AAAgH,IAAA,GAAG,EAAC,IAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC0BH,YAD1B,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,mBAGgBF,IAHhB,CAhBA,CAFF;AA4BD;;AAED,eAAeP,GAAf","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [riskReward, setRr] = useState(2)\n  const [confirmations, setconfirmations] = useState(2)\n  const [balance , setBalance] = useState('1000')\n\n  let risk = ( 100 / (riskReward * confirmations)).toFixed(0)\n\n  let positionSize =  (balance / 100 * (riskReward * confirmations)).toFixed(0)\n\n  return (\n\n    <div className=\"sizer-box\">\n\n    <h1>Position Sizer</h1>\n\n    <span>Account Balance:</span>\n    <input className=\"balance\" onInput={e => setBalance(e.target.value)}  placeholder={'1000'}/>\n  \n\n    <span>Risk to Reward 1: {riskReward}</span>\n    <input className=\"slider\" onInput={e => setRr(e.target.value)} defaultValue=\"2\" type=\"range\" min=\"1\" max=\"10\" />\n\n\n    <span> Confirmations:  {confirmations}  </span>\n    <input className=\"slider\" onInput={e => setconfirmations(e.target.value)} defaultValue=\"2\" type=\"range\" min=\"1\" max=\"10\"/>\n  \n\n    <span> \n     Your Position Size : Â£  {positionSize}\n     <br></br>\n     Your Risk  % { risk }\n     </span>\n     \n\n    </div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}