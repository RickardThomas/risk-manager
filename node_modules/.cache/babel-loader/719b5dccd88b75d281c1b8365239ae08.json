{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n  const select = useRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const handleAdd = () => {\n    const type = select.current; // const input = inputRef.current;\n    // const patt1 = /[1-9]/;\n    // if (newItem === newItem.match(patt1)){\n    //     console.log(newItem)\n    // }\n\n    console.log(inputRef.value);\n\n    if (inputRef.value !== '') {\n      setList([...list, inputRef.value]);\n    }\n\n    inputRef.value = '';\n  }; // console.log(inputRef.current)\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"select\", {\n    ref: select,\n    name: \"petType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"cat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Cat\"), React.createElement(\"option\", {\n    value: \"dog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Dog\"), React.createElement(\"option\", {\n    value: \"ferret\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Ferret\")), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    pattern: \"[0-9]\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, list.reverse().map((item, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, item))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useRef","Example","inputRef","select","list","setList","handleAdd","type","current","console","log","value","reverse","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,OAAhC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AACA,QAAMG,MAAM,GAAGH,MAAM,EAArB;;AAH8B,oBAMND,QAAQ,CAAC,EAAD,CANF;AAAA;AAAA,QAMvBK,IANuB;AAAA,QAMjBC,OANiB;;AAQ9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,IAAI,GAAGJ,MAAM,CAACK,OAApB,CAFoB,CAIpB;AAGA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,KAArB;;AACA,QAAIT,QAAQ,CAACS,KAAT,KAAmB,EAAvB,EAA0B;AACtBN,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUF,QAAQ,CAACS,KAAnB,CAAD,CAAP;AACH;;AACCT,IAAAA,QAAQ,CAACS,KAAT,GAAiB,EAAjB;AACD,GAhBL,CAR8B,CA0B1B;;;AAEJ,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAKA;AAAQ,IAAA,GAAG,EAAER,MAAb;AAAqB,IAAA,IAAI,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADE,EAEF;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFE,EAGF;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE,CALA,EAWA;AAAO,IAAA,GAAG,EAAED,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAqC,IAAA,OAAO,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,EAaA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEI,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOF,IAAI,CAACQ,OAAL,GAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAb,CADD,CADP,CAfA,CADA;AAwBH","sourcesContent":["import React from 'react';\nimport { useState, useRef} from 'react';\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const select = useRef();\n\n\n    const [list, setList] = useState([]);\n\n    const handleAdd = () => {\n\n        const type = select.current;\n       \n        // const input = inputRef.current;\n        \n\n        // const patt1 = /[1-9]/;\n        // if (newItem === newItem.match(patt1)){\n        //     console.log(newItem)\n        // }\n        console.log(inputRef.value)\n        if (inputRef.value !== ''){\n            setList([...list, inputRef.value]);\n        }  \n          inputRef.value = ''\n        };\n\n        // console.log(inputRef.current)\n\n    return (\n    <div>\n    <h1> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n\n    <select ref={select} name=\"petType\">\n  <option value=\"cat\">Cat</option>\n  <option value=\"dog\">Dog</option>\n  <option value=\"ferret\">Ferret</option>\n</select>\n\n    <input ref={inputRef}  maxLength=\"6\" pattern=\"[0-9]\"/>\n\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n    \n    <ul>\n          {list.reverse().map((item, i) => (\n            <li key={i}>{item}\n            </li>\n          ))}\n        </ul>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}