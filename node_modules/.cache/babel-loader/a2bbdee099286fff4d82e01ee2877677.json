{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react'; // import { Component } from 'react'\n\nimport { useState, useEffect, useRef } from 'react';\nexport default function Example() {\n  // const[change, handleChange] = useState('0');\n  // const[val, handleChange] = useState('0');\n  // handleClick = () {\n  // }\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const inputRef = useRef();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" Total area of window in px\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"plus\"), \"Count: \", count), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" input refs\"), React.createElement(\"button\", {\n    onClick: () => {\n      console.log(inputRef.current);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"current\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" \", inputRef.current.value), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \" checkbox 2 \"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \" checkbox 1 \"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" checkbox 3 \")));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","useRef","Example","count","setCount","inputRef","console","log","current","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B;AACA;AACA;AAEA;AAN8B,oBAQJH,QAAQ,CAAE,CAAF,CARJ;AAAA;AAAA,QAQvBI,KARuB;AAAA,QAQhBC,QARgB;;AAW9B,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AAEA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,aAIUA,KAJV,CAHA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,GAAG,EAAEE,QAAZ;AAAsB,IAAA,IAAI,EAAE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBAVA,EAWA;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,OAArB;AAA8B,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKH,QAAQ,CAACG,OAAT,CAAiBC,KAAtB,CAFA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,IAAI,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,iBAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,IAAI,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,iBALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,IAAI,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,iBANA,CAZA,CAFA;AA2BH","sourcesContent":["import React from 'react';\n// import { Component } from 'react'\nimport { useState, useEffect, useRef } from 'react';\n\nexport default function Example() {\n\n    // const[change, handleChange] = useState('0');\n    // const[val, handleChange] = useState('0');\n    // handleClick = () {\n\n    // }\n\n    const [count, setCount] = useState (0);\n\n\n    const inputRef = useRef();\n\n    return (\n\n    <div>\n  \n    <h1> Total area of window in px</h1>\n    <p>\n    \n      <button onClick={() => setCount(count + 1)}>plus</button>\n  \n      Count: {count}\n    </p>\n\n    <label><input ref={inputRef} type =\"text\"/> input refs</label>\n    <button onClick={() => { console.log(inputRef.current)}}>current</button>\n    <p>\n\n    <p> {inputRef.current.value}</p>\n    \n    <label><input type =\"checkbox\"/> checkbox 2 </label>\n    <label><input type =\"checkbox\"/> checkbox 1 </label>\n    <label><input type =\"checkbox\"/> checkbox 3 </label>\n    </p>\n    {/* <input onClick={handleClick} type=\"submit\"/> */}\n    \n \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}