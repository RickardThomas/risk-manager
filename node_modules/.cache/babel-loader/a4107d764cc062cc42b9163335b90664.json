{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react'; // import { Component } from 'react'\n\nimport { useState, useEffect, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n  const elInput = useRef();\n\n  const onButtonClick = () => {\n    elInput.current.focus();\n    console.log(elInput.current.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" Using refs exercise\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: elInput,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" input refs\"), React.createElement(\"button\", {\n    onClick: onButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"onfocus and console logger\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Again\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \" input refs\"), React.createElement(\"button\", {\n    onClick: () => {\n      console.log(inputRef.current.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"check console\"), React.createElement(\"button\", {\n    onClick: () => {\n      inputRef.current.focus();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"onfocus\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \", elInput, \" \"));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","useRef","Example","inputRef","elInput","onButtonClick","current","focus","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AAEA,QAAOG,OAAO,GAAGH,MAAM,EAAvB;;AAEA,QAAMI,aAAa,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAACE,OAAR,CAAgBC,KAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACE,OAAR,CAAgBI,KAA5B;AACD,GAHD;;AAKA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,GAAG,EAAEN,OAAZ;AAAqB,IAAA,IAAI,EAAE,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBAJA,EAMA;AAAQ,IAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,GAAG,EAAEF,QAAZ;AAAsB,IAAA,IAAI,EAAE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBATA,EAUA;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACG,OAAT,CAAiBI,KAA7B;AAAoC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVA,EAWA;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEP,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AAAyB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXA,EAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMH,OAAN,MApBA,CAFA;AAyBH","sourcesContent":["import React from 'react';\n// import { Component } from 'react'\nimport { useState, useEffect, useRef } from 'react';\n\nexport default function Example() {\n\n    const inputRef = useRef();\n\n    const  elInput = useRef();\n\n    const onButtonClick = () => {\n      elInput.current.focus();\n      console.log(elInput.current.value)\n    };\n\n    return (\n\n    <div>\n  \n    <h1> Using refs exercise</h1>\n\n    <label><input ref={elInput} type =\"text\"/> input refs</label>\n    {/* <button onClick={() => { console.log(inputRef.current.value)}}>check console</button> */}\n    <button onClick={onButtonClick}>onfocus and console logger</button>\n\n    <h1> Again</h1>\n    <label><input ref={inputRef} type =\"text\"/> input refs</label>\n    <button onClick={() => { console.log(inputRef.current.value)}}>check console</button>\n    <button onClick={() => { inputRef.current.focus()}}>onfocus</button>\n\n    {/* <p>\n    <label><input type =\"checkbox\"/> checkbox 2 </label>\n    <label><input type =\"checkbox\"/> checkbox 1 </label>\n    <label><input type =\"checkbox\"/> checkbox 3 </label>\n    </p> */}\n    {/* <input onClick={handleClick} type=\"submit\"/> */}\n    \n    <p> { elInput } </p>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}