{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/coding/2020/5 May/Code to Show Joe/position-sizing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/coding/2020/5 May/Code to Show Joe/position-sizing/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(2),\n        _useState2 = _slicedToArray(_useState, 2),\n        riskReward = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState(2),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confirmations = _useState4[0],\n        setconfirmations = _useState4[1];\n\n  const _useState5 = useState('1000'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        balance = _useState6[0],\n        setBalance = _useState6[1]; // let risk =  (balance / 100 * (riskReward * confirmations)).toFixed(0)\n  // let risk = ((confirmations * -1)) \n  // let risk = ((riskReward * -1) && (confirmations * -1) * 2 ) \n\n\n  let risk = 100 * (riskReward * -1 * confirmations * -1);\n  let positionSize = (balance / 100 * (riskReward * confirmations)).toFixed(0);\n  return React.createElement(\"div\", {\n    className: \"position-sizer-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"titling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Position Sizer\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Account Balance:\"), React.createElement(\"input\", {\n    onInput: e => setBalance(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Risk to Reward 1:\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, riskReward)), React.createElement(\"input\", {\n    onInput: e => setInput(e.target.value),\n    defaultValue: \"2\",\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Confirmations:  \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, confirmations)), React.createElement(\"input\", {\n    onInput: e => setconfirmations(e.target.value),\n    defaultValue: \"2\",\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Position Size :\"), React.createElement(\"span\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\\xA3  \", positionSize)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Risk \"), React.createElement(\"span\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" % \", risk)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/coding/2020/5 May/Code to Show Joe/position-sizing/src/App.js"],"names":["React","useState","App","riskReward","setInput","confirmations","setconfirmations","balance","setBalance","risk","positionSize","toFixed","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [riskReward, setInput] = useState(2)\n  const [confirmations, setconfirmations] = useState(2)\n  const [balance , setBalance] = useState('1000')\n\n\n  // let risk =  (balance / 100 * (riskReward * confirmations)).toFixed(0)\n\n  // let risk = ((confirmations * -1)) \n\n\n  // let risk = ((riskReward * -1) && (confirmations * -1) * 2 ) \n\n  let risk = ( 100 * (riskReward * -1 * confirmations * -1)) \n\n  \n  \n  let positionSize =  (balance / 100 * (riskReward * confirmations)).toFixed(0)\n\n\n  return (\n\n<div className=\"position-sizer-box\">\n\n<h4 className=\"titling\">Position Sizer</h4>\n<div><label>Account Balance:</label><input onInput={e => setBalance(e.target.value)}/></div>\n\n<div className=\"slidecontainer\">\n\n<label>Risk to Reward 1:<strong>{riskReward}</strong></label>\n<input onInput={e => setInput(e.target.value)} defaultValue=\"2\" type=\"range\" min=\"1\" max=\"10\" className=\"slider\"/>\n</div>\n\n<div className=\"slidecontainer\">\n\n<label>Confirmations:  <strong>{confirmations}</strong></label>\n<input onInput={e => setconfirmations(e.target.value)} defaultValue=\"2\" type=\"range\" min=\"1\" max=\"10\" className=\"slider\"/>\n</div>\n\n<div><strong>Position Size :</strong><span className='answer'>Â£  { positionSize}</span></div>\n\n<div><strong> Risk </strong><span className='answer'> % { risk }</span></div>\n\n</div>\n\n\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}