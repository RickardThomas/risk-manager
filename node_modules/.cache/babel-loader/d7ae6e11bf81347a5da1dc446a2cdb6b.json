{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nexport default function Example() {\n  const inputRef = React.useRef();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        alertReminders = _React$useState2[0],\n        setAlertReminders = _React$useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const alertPrice = input.value;\n\n    if (alertReminders.indexOf(alertPrice) === -1) {\n      setAlertReminders([...alertReminders, alertPrice]);\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: inputOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" \", alertPrice, \" \"));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","Example","inputRef","useRef","alertReminders","setAlertReminders","handleAdd","input","current","alertPrice","value","indexOf","inputOne"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,EAAjB;;AAF8B,0BAGcL,KAAK,CAACC,QAAN,CAAe,EAAf,CAHd;AAAA;AAAA,QAGvBK,cAHuB;AAAA,QAGPC,iBAHO;;AAK9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGL,QAAQ,CAACM,OAAvB;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,KAAzB;;AAEA,QAAIN,cAAc,CAACO,OAAf,CAAuBF,UAAvB,MAAuC,CAAC,CAA5C,EAA+C;AAC3CJ,MAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBK,UAApB,CAAD,CAAjB;AACD;;AAEDF,IAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACD,GAVL;;AAcA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,GAAG,EAAEE,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMG,UAAN,MAHA,CADA;AAOH","sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react';\n\nexport default function Example() {\n  \n    const inputRef = React.useRef();\n    const [alertReminders, setAlertReminders] = React.useState([]);\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        const alertPrice = input.value;\n\n        if (alertReminders.indexOf(alertPrice) === -1) {\n            setAlertReminders([...alertReminders, alertPrice]);\n          }\n      \n          input.value = ''\n        }\n\n\n \n    return (\n    <div>\n    <input ref={inputOne} />\n    <button onClick={handleAdd}></button>\n    <h1> {alertPrice} </h1>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}