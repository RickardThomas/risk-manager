{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react'; // import { Component } from 'react'\n\nimport { useState, useEffect, useFetch } from 'react';\nexport default function Example() {\n  useEffect(() => {\n    fetch(\"https://api.randomuser.me/\").then(results => {\n      return results.json();\n    }).then(data => {\n      console.log(data.results[0].gender);\n    }); // console.log(data.results[0].gender)\n  }, []);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        checked = _useState4[0],\n        setChecked = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" Fetch data . . . \", fetch.results), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" \", React.createElement(\"input\", {\n    onClick: () => setChecked(1),\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \" checkbox \", checked, \" \")));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","useFetch","Example","fetch","then","results","json","data","console","log","gender","count","setCount","checked","setChecked"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9BF,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAI;AAAC,aAAOA,OAAO,CAACC,IAAR,EAAP;AAAsB,KADxC,EAECF,IAFD,CAEOG,IAAI,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACF,OAAL,CAAa,CAAb,EAAgBK,MAA5B;AAAoC,KAHxC,EAFY,CAMZ;AAEH,GARQ,EAQN,EARM,CAAT;;AAF8B,oBAYJX,QAAQ,CAAC,CAAD,CAZJ;AAAA;AAAA,QAYvBY,KAZuB;AAAA,QAYhBC,QAZgB;;AAAA,qBAaAb,QAAQ,EAbR;AAAA;AAAA,QAavBc,OAbuB;AAAA,QAadC,UAbc;;AAe9B,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBX,KAAK,CAACE,OAA7B,CADA,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBM,KAAhB,WALJ,EAME;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQ;AAAO,IAAA,OAAO,EAAE,MAAMG,UAAU,CAAC,CAAD,CAAhC;AAAqC,IAAA,IAAI,EAAE,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,gBAA0ED,OAA1E,MADC,CAPD,CADA;AAkBH","sourcesContent":["import React from 'react';\n// import { Component } from 'react'\nimport { useState, useEffect, useFetch} from 'react';\n\nexport default function Example() {\n\n    useEffect(() => {\n        \n        fetch(\"https://api.randomuser.me/\")\n        .then(results => {return results.json()})\n        .then( data => {\n            console.log(data.results[0].gender)})\n        // console.log(data.results[0].gender)\n\n    }, [])\n\n    const [count, setCount] = useState(0);\n    const [checked, setChecked] = useState();\n\n    return (\n    <div>\n    <h1> Fetch data . . . {fetch.results}</h1>\n    \n        {/* <p> { results }</p> */}\n\n        <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}></button>\n     <p>\n    <label> <input onClick={() => setChecked(1)} type =\"checkbox\"/> checkbox {checked} </label>\n    </p> \n    {/* <label><input type =\"checkbox\"/> checkbox 1 </label>\n    <label><input type =\"checkbox\"/> checkbox 3 </label> */}\n   \n   \n    \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}