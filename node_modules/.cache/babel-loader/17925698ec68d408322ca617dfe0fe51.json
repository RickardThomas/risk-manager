{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react'; // import { Component } from 'react'\n\nimport { useState, useEffect, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n  const inputEl = useRef(null);\n\n  const onButtonClick = () => {\n    // `current` points to the mounted text input element\n    inputEl.current.focus();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" Total area of window in px\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), \" input refs\"), React.createElement(\"button\", {\n    onClick: () => {\n      console.log(inputRef.current.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"check console\"), React.createElement(\"button\", {\n    onClick: () => {\n      inputRef.current.focus();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"onfocus\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Again\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: elRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \" input refs\"), React.createElement(\"button\", {\n    onClick: onButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"onfocus\"));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","useRef","Example","inputRef","inputEl","onButtonClick","current","focus","console","log","value","elRef"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AAEA,QAAMG,OAAO,GAAGH,MAAM,CAAC,IAAD,CAAtB;;AACA,QAAMI,aAAa,GAAG,MAAM;AAC1B;AACAD,IAAAA,OAAO,CAACE,OAAR,CAAgBC,KAAhB;AACD,GAHD;;AAKA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,GAAG,EAAEJ,QAAZ;AAAsB,IAAA,IAAI,EAAE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBAJA,EAKA;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACG,OAAT,CAAiBI,KAA7B;AAAoC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALA,EAMA;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEP,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AAAyB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,GAAG,EAAEI,KAAZ;AAAmB,IAAA,IAAI,EAAE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,gBAVA,EAYA;AAAQ,IAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZA,CAFA;AAyBH","sourcesContent":["import React from 'react';\n// import { Component } from 'react'\nimport { useState, useEffect, useRef } from 'react';\n\nexport default function Example() {\n\n    const inputRef = useRef();\n\n    const inputEl = useRef(null);\n    const onButtonClick = () => {\n      // `current` points to the mounted text input element\n      inputEl.current.focus();\n    };\n\n    return (\n\n    <div>\n  \n    <h1> Total area of window in px</h1>\n   \n    <label><input ref={inputRef} type =\"text\"/> input refs</label>\n    <button onClick={() => { console.log(inputRef.current.value)}}>check console</button>\n    <button onClick={() => { inputRef.current.focus()}}>onfocus</button>\n\n    <h1> Again</h1>\n\n    <label><input ref={elRef} type =\"text\"/> input refs</label>\n    {/* <button onClick={() => { console.log(inputRef.current.value)}}>check console</button> */}\n    <button onClick={onButtonClick}>onfocus</button>\n    {/* <p>\n    <label><input type =\"checkbox\"/> checkbox 2 </label>\n    <label><input type =\"checkbox\"/> checkbox 1 </label>\n    <label><input type =\"checkbox\"/> checkbox 3 </label>\n    </p> */}\n    {/* <input onClick={handleClick} type=\"submit\"/> */}\n    \n \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}