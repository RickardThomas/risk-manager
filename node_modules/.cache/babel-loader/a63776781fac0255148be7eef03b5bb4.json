{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/coding/2020/5 May/Code to Show Joe/position-sizing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/coding/2020/5 May/Code to Show Joe/position-sizing/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(2),\n        _useState2 = _slicedToArray(_useState, 2),\n        riskReward = _useState2[0],\n        setRr = _useState2[1];\n\n  const _useState3 = useState(2),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confirmations = _useState4[0],\n        setconfirmations = _useState4[1];\n\n  const _useState5 = useState('1000'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        balance = _useState6[0],\n        setBalance = _useState6[1]; // gives risk  = more confirmations and greater RR = less risk.\n  // let risk = ( 100 / 100 * (riskReward * -1 * confirmations) - -100) \n\n\n  let risk = 100 / 100 * (riskReward * -1 * confirmations) - -100; // \n\n  let positionSize = (balance / 100 * (riskReward * confirmations)).toFixed(0);\n  return React.createElement(\"div\", {\n    className: \"position-sizer-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"titling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Position Sizer\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Account Balance:\"), React.createElement(\"input\", {\n    placeholder: balance,\n    onInput: e => setBalance(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Risk to Reward 1:\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, riskReward)), React.createElement(\"input\", {\n    onInput: e => setRr(e.target.value),\n    defaultValue: \"2\",\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Confirmations:  \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, confirmations)), React.createElement(\"input\", {\n    onInput: e => setconfirmations(e.target.value),\n    defaultValue: \"2\",\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Your Position Size :\"), React.createElement(\"span\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\xA3  \", positionSize), \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" Your Risk \"), React.createElement(\"span\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" % \", risk), \" \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/coding/2020/5 May/Code to Show Joe/position-sizing/src/App.js"],"names":["React","useState","App","riskReward","setRr","confirmations","setconfirmations","balance","setBalance","risk","positionSize","toFixed","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [riskReward, setRr] = useState(2)\n  const [confirmations, setconfirmations] = useState(2)\n  const [balance , setBalance] = useState('1000')\n\n  // gives risk  = more confirmations and greater RR = less risk.\n  // let risk = ( 100 / 100 * (riskReward * -1 * confirmations) - -100) \n\n  let risk = ( 100 / 100 * (riskReward * -1 * confirmations) - -100) \n\n  // \n  let positionSize =  (balance / 100 * (riskReward * confirmations)).toFixed(0)\n\n  return (\n\n    <div className=\"position-sizer-box\">\n\n    <h4 className=\"titling\">Position Sizer</h4>\n\n    <div><label>Account Balance:</label>\n    <input placeholder={balance}\n    onInput={e => setBalance(e.target.value)}/>\n    </div>\n\n    <div className=\"slidecontainer\">\n    <label>Risk to Reward 1:<strong>{riskReward}</strong></label>\n    <input onInput={e => setRr(e.target.value)} defaultValue=\"2\" type=\"range\" min=\"1\" max=\"10\" className=\"slider\"/>\n    </div>\n\n    <div className=\"slidecontainer\">\n    <label>Confirmations:  <strong>{confirmations}</strong></label>\n    <input onInput={e => setconfirmations(e.target.value)} defaultValue=\"2\" type=\"range\" min=\"1\" max=\"10\" className=\"slider\"/>\n    </div>\n\n    <br></br>\n    <div><strong> Your Position Size :</strong><span className='answer'>Â£  { positionSize}</span> </div>\n    <div><strong> Your Risk </strong><span className='answer'> % { risk }</span> </div>\n\n\n\n    </div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}