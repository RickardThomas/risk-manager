{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interfacing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interfacing/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const heading = React.useRef();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isToggleOn = _useState2[0],\n        setToggle = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLight = _useState4[0],\n        setLight = _useState4[1];\n\n  const hanClick = () => {\n    setToggle(isToggleOn ? false : true);\n    setLight(isLight ? false : true);\n  };\n\n  return React.createElement(\"div\", {\n    ref: heading,\n    className: isLight ? 'App' : 'darkMode',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: hanClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, isToggleOn ? 'LIGHT' : 'DARK')), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Hello There\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/interfacing/src/App.js"],"names":["React","useState","App","heading","useRef","isToggleOn","setToggle","isLight","setLight","hanClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,EAAhB;;AAFa,oBAKoBH,QAAQ,CAAC,IAAD,CAL5B;AAAA;AAAA,QAKLI,UALK;AAAA,QAKOC,SALP;;AAAA,qBAMgBL,QAAQ,CAAC,IAAD,CANxB;AAAA;AAAA,QAMLM,OANK;AAAA,QAMIC,QANJ;;AAQZ,QAAMC,QAAQ,GAAG,MAAM;AAClBH,IAAAA,SAAS,CAACD,UAAU,GAAI,KAAJ,GAAY,IAAvB,CAAT;AACAG,IAAAA,QAAQ,CAACD,OAAO,GAAK,KAAL,GAAa,IAArB,CAAR;AACD,GAHJ;;AAMD,SAEF;AAAK,IAAA,GAAG,EAAEJ,OAAV;AAAmB,IAAA,SAAS,EAAEI,OAAO,GAAI,KAAJ,GAAY,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BJ,UAAU,GAAG,OAAH,GAAa,MAAnD,CADA,CADA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CAFE;AAeD;;AAED,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {useState} from 'react';\n\nfunction App() {\n\n  const heading = React.useRef();\n  \n  \n   const [isToggleOn, setToggle] = useState(true)\n   const [isLight, setLight] = useState(true)\n\n   const hanClick = () => {\n        setToggle(isToggleOn  ? false : true)\n        setLight(isLight  ?  false : true)\n      }\n\n\n  return (\n  \n<div ref={heading} className={isLight  ? 'App' : 'darkMode' }>\n<header>\n<button onClick={hanClick}>{isToggleOn ? 'LIGHT' : 'DARK'}</button>\n</header>\n\n\n\n<h1> Hello There</h1>\n<h3></h3>\n \n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}