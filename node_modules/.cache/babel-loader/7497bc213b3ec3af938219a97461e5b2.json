{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n  const heading = useRef();\n  const selectRef = useRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const selecting = selectRef.current;\n    inputRef.current.focus;\n    heading.current.className = 'off';\n    console.log(heading.current.className);\n    console.log(input.pattern);\n    const order = {\n      input,\n      selecting\n    };\n    console.log(selecting.value); // console.log(selecting)\n\n    if (input.value !== '') {\n      setList([...list, order]);\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    ref: heading,\n    className: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"select\", {\n    ref: selectRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Btc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"BTC\"), React.createElement(\"option\", {\n    value: \"Eth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"option\", {\n    value: \"Ltc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"LTC\")), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    pattern: \"[0-9]\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, list.reverse().map((item, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, item))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useRef","Example","inputRef","heading","selectRef","list","setList","handleAdd","input","current","selecting","focus","className","console","log","pattern","order","value","reverse","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,OAAhC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AACA,QAAMG,OAAO,GAAGH,MAAM,EAAtB;AACA,QAAMI,SAAS,GAAGJ,MAAM,EAAxB;;AAJ8B,oBAKND,QAAQ,CAAC,EAAD,CALF;AAAA;AAAA,QAKvBM,IALuB;AAAA,QAKjBC,OALiB;;AAO9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGN,QAAQ,CAACO,OAAvB;AACA,UAAMC,SAAS,GAAGN,SAAS,CAACK,OAA5B;AAEAP,IAAAA,QAAQ,CAACO,OAAT,CAAiBE,KAAjB;AAEAR,IAAAA,OAAO,CAACM,OAAR,CAAgBG,SAAhB,GAA4B,KAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACM,OAAR,CAAgBG,SAA5B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,OAAlB;AAEA,UAAMC,KAAK,GAAG;AAAER,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAd;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACO,KAAtB,EAdoB,CAepB;;AAEA,QAAIT,KAAK,CAACS,KAAN,KAAgB,EAApB,EAAuB;AACnBX,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUW,KAAV,CAAD,CAAP;AACH;;AACCR,IAAAA,KAAK,CAACS,KAAN,GAAc,EAAd;AACD,GArBL;;AAuBA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,GAAG,EAAEd,OAAT;AAAkB,IAAA,SAAS,EAAE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAIA;AAAQ,IAAA,GAAG,EAAEC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,EAEA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA,EAGA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHA,CAJA,EAUA;AAAO,IAAA,GAAG,EAAEF,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAqC,IAAA,OAAO,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,EAYA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEK,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZA,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOF,IAAI,CAACa,OAAL,GAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAb,CADD,CADP,CAdA,CADA;AAuBH","sourcesContent":["import React from 'react';\nimport { useState, useRef} from 'react';\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const heading = useRef();\n    const selectRef = useRef();\n    const [list, setList] = useState([]);\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        const selecting = selectRef.current;\n\n        inputRef.current.focus\n\n        heading.current.className = 'off'\n        console.log(heading.current.className)\n\n        console.log(input.pattern)\n\n        const order = { input, selecting}\n        \n        console.log(selecting.value)   \n        // console.log(selecting)\n    \n        if (input.value !== ''){\n            setList([...list, order]);\n        }  \n          input.value = ''\n        };\n\n    return (\n    <div>\n    <h1 ref={heading} className={\"warning\"}> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n    <select ref={selectRef}>\n    <option value=\"Btc\">BTC</option>\n    <option value=\"Eth\">ETH</option>\n    <option value=\"Ltc\">LTC</option>\n    </select>\n\n    <input ref={inputRef}  maxLength=\"6\" pattern=\"[0-9]\"/>\n\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n    \n    <ul>\n          {list.reverse().map((item, i) => (\n            <li key={i}>{item} \n            </li>\n          ))}\n        </ul>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}