{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        alerts = _useState2[0],\n        setAlert = _useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const alertPrice = inRef.value;\n\n    if (alertPrice !== '') {\n      setAlert([alerts, alertPrice]);\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"Inneralert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, alerts.reverse().map((n, i) => React.createElement(\"li\", {\n    className: \"Myli\",\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, n))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","useRef","Example","inputRef","alerts","setAlert","handleAdd","input","current","alertPrice","inRef","value","reverse","map","n","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA2C,OAA3C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;;AAF8B,oBAGHF,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,QAGvBK,MAHuB;AAAA,QAGfC,QAHe;;AAK9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AACA,UAAMC,UAAU,GAAGC,KAAK,CAACC,KAAzB;;AAEA,QAAIF,UAAU,KAAK,EAAnB,EAAsB;AAClBJ,MAAAA,QAAQ,CAAC,CAACD,MAAD,EAASK,UAAT,CAAD,CAAR;AACH;;AACCF,IAAAA,KAAK,CAACI,KAAN,GAAc,EAAd;AACD,GATL;;AAWA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,GAAG,EAAER,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOF,MAAM,CAACQ,OAAP,GAAiBC,GAAjB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KACpB;AAAI,IAAA,SAAS,EAAC,MAAd;AAAqB,IAAA,GAAG,EAAEA,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,CAA9B,CADD,CADP,CAHA,CADA;AAYH","sourcesContent":["import React from 'react';\nimport { useState, useEffect, useRef} from 'react';\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const [alerts, setAlert] = useState([]);\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        const alertPrice = inRef.value;\n\n        if (alertPrice !== ''){\n            setAlert([alerts, alertPrice]);\n        }  \n          input.value = ''\n        };\n\n    return (\n    <div>\n    <input ref={inputRef} />\n    <button onClick={handleAdd}></button>\n    <ul className=\"Inneralert\">\n          {alerts.reverse().map((n, i) => (\n            <li className=\"Myli\" key={i}>{n}\n            </li>\n          ))}\n        </ul>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}