{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/booky-wuk/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/booky-wuk/src/Components/Alerts.jsx\";\nimport React from 'react';\nimport moment from \"moment\";\nimport './orderbook.css';\nimport './pricealert.css';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ORDER\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}\n\nfunction Alerts() {\n  // const [alertReminders, setAlertReminders] = React.useState([]);\n  const _React$useReducer = React.useReducer(reducer, []),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        orders = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  React.useEffect(() => {\n    const ws = new WebSocket(\"wss://api.bitfinex.com/ws\");\n\n    ws.onopen = function () {\n      ws.send(JSON.stringify({\n        event: \"subscribe\",\n        channel: \"trades\",\n        pair: \"tBTCUSD\"\n      }));\n    };\n\n    ws.onmessage = function (msg) {\n      var response = JSON.parse(msg.data);\n      var isAnOrder = response[1] === \"tu\";\n\n      if (isAnOrder) {\n        const time = moment().format(\"hh:mm:ss\");\n        const price = response[5].toFixed(0);\n        const amount = response[6].toFixed(5);\n        const ordering = {\n          time,\n          price,\n          amount\n        };\n        const order = ordering.reverse;\n        dispatch({\n          type: \"ADD_ORDER\",\n          payload: order\n        });\n      }\n    };\n  }, []);\n  orders.reverse();\n  return React.createElement(\"div\", {\n    className: \"orders-alerts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"orderbook\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"titling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Bitfinex BTC order book\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Time \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Amount\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"orders\", {\n    className: \"foreach\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })(({\n    time,\n    price,\n    amount\n  }, i) => React.createElement(\"tr\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" \", time, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, price), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, amount)))))));\n}\n\nexport default Alerts;","map":{"version":3,"sources":["/Users/tom/Desktop/booky-wuk/src/Components/Alerts.jsx"],"names":["React","moment","reducer","state","action","type","payload","Alerts","useReducer","orders","dispatch","useEffect","ws","WebSocket","onopen","send","JSON","stringify","event","channel","pair","onmessage","msg","response","parse","data","isAnOrder","time","format","price","toFixed","amount","ordering","order","reverse","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,iBAAP;AACA,OAAO,kBAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASI,MAAT,GAAkB;AAEhB;AAFgB,4BAGWP,KAAK,CAACQ,UAAN,CAAiBN,OAAjB,EAA0B,EAA1B,CAHX;AAAA;AAAA,QAGTO,MAHS;AAAA,QAGDC,QAHC;;AAKhBV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,UAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,2BAAd,CAAX;;AAEAD,IAAAA,EAAE,CAACE,MAAH,GAAY,YAAY;AACtBF,MAAAA,EAAE,CAACG,IAAH,CACEC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,KAAK,EAAE,WADM;AAEbC,QAAAA,OAAO,EAAE,QAFI;AAGbC,QAAAA,IAAI,EAAE;AAHO,OAAf,CADF;AAOD,KARD;;AAUAR,IAAAA,EAAE,CAACS,SAAH,GAAe,UAAUC,GAAV,EAAe;AAC5B,UAAIC,QAAQ,GAAGP,IAAI,CAACQ,KAAL,CAAWF,GAAG,CAACG,IAAf,CAAf;AACA,UAAIC,SAAS,GAAGH,QAAQ,CAAC,CAAD,CAAR,KAAgB,IAAhC;;AAEA,UAAIG,SAAJ,EAAe;AACb,cAAMC,IAAI,GAAG1B,MAAM,GAAG2B,MAAT,CAAgB,UAAhB,CAAb;AACA,cAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAD,CAAR,CAAYO,OAAZ,CAAoB,CAApB,CAAd;AACA,cAAMC,MAAM,GAAGR,QAAQ,CAAC,CAAD,CAAR,CAAYO,OAAZ,CAAoB,CAApB,CAAf;AAEA,cAAME,QAAQ,GAAG;AAAEL,UAAAA,IAAF;AAAQE,UAAAA,KAAR;AAAeE,UAAAA;AAAf,SAAjB;AAIA,cAAME,KAAK,GAAGD,QAAQ,CAACE,OAAvB;AAEAxB,QAAAA,QAAQ,CAAC;AAAEL,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,OAAO,EAAE2B;AAA9B,SAAD,CAAR;AAED;AACF,KAlBD;AAmBD,GAhCD,EAgCG,EAhCH;AAmCAxB,EAAAA,MAAM,CAACyB,OAAP;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC,CAAC;AAAEP,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeE,IAAAA;AAAf,GAAD,EAA0BI,CAA1B,KACrC;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMR,IAAN,MADF,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAL,CADnB,EACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,MAAL,CADnC,CADD,CADH,CARF,CAFF,CAFF,CADF;AAyBD;;AAED,eAAexB,MAAf","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\n\nimport './orderbook.css';\nimport './pricealert.css';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ORDER\":\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n\nfunction Alerts() {\n\n  // const [alertReminders, setAlertReminders] = React.useState([]);\n  const [orders, dispatch] = React.useReducer(reducer, []);\n\n  React.useEffect(() => {\n    const ws = new WebSocket(\"wss://api.bitfinex.com/ws\");\n\n    ws.onopen = function () {\n      ws.send(\n        JSON.stringify({\n          event: \"subscribe\",\n          channel: \"trades\",\n          pair: \"tBTCUSD\"\n        })\n      );\n    };\n\n    ws.onmessage = function (msg) {\n      var response = JSON.parse(msg.data);\n      var isAnOrder = response[1] === \"tu\";\n\n      if (isAnOrder) {\n        const time = moment().format(\"hh:mm:ss\");\n        const price = response[5].toFixed(0);\n        const amount = response[6].toFixed(5);\n\n        const ordering = { time, price, amount };\n\n\n\n        const order = ordering.reverse\n          \n        dispatch({ type: \"ADD_ORDER\", payload: order })\n  \n      }\n    };\n  }, []);\n \n\n  orders.reverse()\n  \n  return (\n    <div className=\"orders-alerts\">\n\n      <div className=\"orderbook\">\n        <h4 className=\"titling\"> Bitfinex BTC order book</h4>\n        <table>\n          <thead>\n            <tr>\n              <th>Time </th>\n              <th>Price</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {<orders className=\"foreach\"></orders>(({ time, price, amount }, i) => (\n              <tr  key={i}>\n                <td> {time} </td><td>{price}</td><td>{amount}</td>\n                \n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Alerts;"]},"metadata":{},"sourceType":"module"}