{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/Example.jsx\";\nimport React from 'react'; // import { Component } from 'react'\n\nimport { useState, useEffect } from 'react';\nexport default function Example() {\n  // const[change, handleChange] = useState('0');\n  // const[val, handleChange] = useState('0');\n  // handleClick = () {\n  // }\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1]; // const [count, setPlus] = useState (0);\n\n\n  setPlus = count => {\n    const counting = count + 1;\n    return setCount(counting);\n  };\n\n  setReset = () => {\n    const count = count + 1;\n    setCount(count);\n  };\n\n  setMine = () => {\n    const count = count - 1;\n    setCount(count);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Total area of window in px\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Count: \", count, React.createElement(\"button\", {\n    onClick: setReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    onClick: setMine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"button\", {\n    onClick: setPlus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"+\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \" checkbox 2 \"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \" checkbox 1 \"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" checkbox 3 \")));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/Example.jsx"],"names":["React","useState","useEffect","Example","count","setCount","setPlus","counting","setReset","setMine"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B;AACA;AACA;AAEA;AAN8B,oBAQJF,QAAQ,CAAE,CAAF,CARJ;AAAA;AAAA,QAQvBG,KARuB;AAAA,QAQhBC,QARgB,kBAS9B;;;AAGAC,EAAAA,OAAO,GAAIF,KAAD,IAAW;AACjB,UAAMG,QAAQ,GAAGH,KAAK,GAAG,CAAzB;AACD,WAAOC,QAAQ,CAACE,QAAD,CAAf;AACD,GAHF;;AAKCC,EAAAA,QAAQ,GAAG,MAAM;AACd,UAAMJ,KAAK,GAAGA,KAAK,GAAG,CAAtB;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACF,GAHD;;AAKAK,EAAAA,OAAO,GAAG,MAAM;AACb,UAAML,KAAK,GAAGA,KAAK,GAAG,CAAtB;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACF,GAHD;;AAKD,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQA,KADR,EAEE;AAAQ,IAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CAHA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,IAAI,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,iBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,IAAI,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,iBAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAO,IAAA,IAAI,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,iBAJA,CATA,CAFA;AAsBH","sourcesContent":["import React from 'react';\n// import { Component } from 'react'\nimport { useState, useEffect } from 'react';\n\nexport default function Example() {\n\n    // const[change, handleChange] = useState('0');\n    // const[val, handleChange] = useState('0');\n    // handleClick = () {\n\n    // }\n\n    const [count, setCount] = useState (0);\n    // const [count, setPlus] = useState (0);\n\n\n    setPlus = (count) => {\n        const counting = count + 1\n       return setCount(counting)\n     };\n\n     setReset = () => {\n        const count = count + 1\n        setCount(count)\n     }\n\n     setMine = () => {\n        const count = count - 1\n        setCount(count)\n     }\n\n    return (\n\n    <div>\n  \n    <h1> Total area of window in px</h1>\n    <p>\n    Count: {count}\n      <button onClick={setReset}>Reset</button>\n      <button onClick={setMine}>-</button>\n      <button onClick={setPlus}>+</button>\n    </p>\n    <p>\n    \n    <label><input type =\"checkbox\"/> checkbox 2 </label>\n    <label><input type =\"checkbox\"/> checkbox 1 </label>\n    <label><input type =\"checkbox\"/> checkbox 3 </label>\n    </p>\n    {/* <input onClick={handleClick} type=\"submit\"/> */}\n    \n \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}