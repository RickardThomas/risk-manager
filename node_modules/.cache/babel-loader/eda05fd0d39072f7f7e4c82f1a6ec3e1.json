{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/react-position-sizer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/react-position-sizer/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputz = _useState2[0],\n        setInput = _useState2[1]; // '' is the initial state value\n\n\n  let risk = 1;\n  const inputRef = React.useRef();\n  const output = inputRef.current;\n\n  const showResult = () => {\n    console.log(inputRef.valueAsNumber);\n    console.log(output);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"order-alert-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"position-sizer-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"titling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Position Sizer\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Please specify:\")), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"add-btn\",\n    onClick: showResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"account balance:\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Risk to reward 1:\", React.createElement(\"strong\", {\n    id: \"demo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), inputz), React.createElement(\"input\", {\n    onInput: e => setInput(e.target.value),\n    ref: inputRef,\n    onChange: showResult,\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    defaultValue: \"3\",\n    className: \"slider\",\n    id: \"myRange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Position size:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, risk))));\n}\n\nexport default App;\n{\n  /* <div className=\"slidecontainer\">\n  <p>confidence / volume<strong id=\"demothree\"></strong>%</p>\n  <input type=\"range\" min=\"1\" max=\"100\" value=\"3\" className=\"slidertwo\" id=\"myRangethree\"/>\n  </div> */\n}","map":{"version":3,"sources":["/Users/tom/Desktop/react-position-sizer/src/App.js"],"names":["React","useState","App","inputz","setInput","risk","inputRef","useRef","output","current","showResult","console","log","valueAsNumber","e","target","value"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEcD,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAENE,MAFM;AAAA,QAEEC,QAFF,kBAE4B;;;AAEzC,MAAIC,IAAI,GAAG,CAAX;AAEA,QAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,EAAjB;AAEA,QAAMC,MAAM,GAAGF,QAAQ,CAACG,OAAxB;;AACA,QAAMC,UAAU,GAAG,MAAM;AAEzBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,aAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAED,GALC;;AAOA,SAEF;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CALA,EAUA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAA0C,IAAA,OAAO,EAAEE,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAL,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,CAZA,EAcA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,EAAgDP,MAAhD,CADF,EAEA;AAAO,IAAA,OAAO,EAAEW,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7B;AAAgD,IAAA,GAAG,EAAEV,QAArD;AAA+D,IAAA,QAAQ,EAAEI,UAAzE;AAAqF,IAAA,IAAI,EAAC,OAA1F;AAAkG,IAAA,GAAG,EAAC,GAAtG;AAA0G,IAAA,GAAG,EAAC,IAA9G;AAAoH,IAAA,YAAY,EAAC,GAAjI;AAAqI,IAAA,SAAS,EAAC,QAA/I;AAAwJ,IAAA,EAAE,EAAC,SAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAdA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,IAAR,CAA1B,CAnBA,CAHA,CAFE;AAiCD;;AAED,eAAeH,GAAf;AAIA;AAAC;;;;AAGS","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [inputz, setInput] = useState(''); // '' is the initial state value\n\n  let risk = 1;\n\n  const inputRef = React.useRef();\n\n  const output = inputRef.current;  \n  const showResult = () => {\n\n  console.log(inputRef.valueAsNumber)\n  console.log(output)\n\n}\n\n  return (\n\n<div className=\"order-alert-box\">\n\n{/* Posotion Sizer */}\n<div className=\"position-sizer-box\">\n\n\n<h4 className=\"titling\">Position Sizer</h4>\n\n<div>\n<label>Please specify:</label>\n</div>\n\n\n<button type='button' className=\"add-btn\" onClick={showResult}>Add</button>\n\n<div><p>account balance:</p><input/></div>\n\n<div className=\"slidecontainer\">\n  <p>Risk to reward 1:<strong id=\"demo\"></strong>{inputz}</p>\n<input onInput={e => setInput(e.target.value)}  ref={inputRef} onChange={showResult} type=\"range\" min=\"1\" max=\"10\"  defaultValue='3' className=\"slider\" id=\"myRange\"/>\n</div>\n\n<div><p>Position size:</p><span>{ risk }</span></div>\n\n</div>\n\n{/* POSITION SIZER END*/}\n\n</div>\n\n);\n}\n\nexport default App;\n\n\n\n{/* <div className=\"slidecontainer\">\n<p>confidence / volume<strong id=\"demothree\"></strong>%</p>\n<input type=\"range\" min=\"1\" max=\"100\" value=\"3\" className=\"slidertwo\" id=\"myRangethree\"/>\n</div> */}\n\n"]},"metadata":{},"sourceType":"module"}